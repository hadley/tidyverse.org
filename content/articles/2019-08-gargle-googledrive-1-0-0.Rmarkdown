---
title: gargle and googledrive v1.0.0
slug: gargle-googledrive-1-0-0
author: Jenny Bryan
description: >
  gargle and googledrive v1.0.0 are now on CRAN.
date: '2019-08-21'
categories: [package]
tags:
  - gargle
  - googledrive
photo:
  url: https://flic.kr/p/oe2LJ1
  author: North Carolina Christian advocate (1894)
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE, comment = "#>",
  fig.width = 7,
  fig.align = 'center',
  fig.asp = 0.618, # 1 / phi
  out.width = "700px"
)
# options(crayon.enabled = TRUE)
```

## Introduction

We're elated to announce the initial release of gargle and of googledrive v1.0.0 on CRAN!

  * The [gargle package](https://gargle.r-lib.org) is meant to take some of the pain out of working with Google APIs. It's mostly aimed at the maintainers of R packages that call Google APIs. If we're successful, users won't really notice gargle, they'll just feel like these packages got easier to work with and less idiosyncratic.
  * The [googledrive package](https://googledrive.tidyverse.org) is a great example of such a package: it helps useRs work with Google Drive from R. The v1.0.0 release gets all auth functionality (and more) from gargle and also has a new feature that makes file upload/update more user-friendly.
  
## gargle

The [gargle package](https://gargle.r-lib.org) first appeared on CRAN in early June 2019 and has gotten a few small updates as we learn more by wiring it into packages. gargle is already used in these packages:

  * [bigrquery](https://bigrquery.r-dbi.org) (>= v1.2.0)
  * [googledrive](https://googledrive.tidyverse.org) (>= v1.0.0)
  * [gmailr](https://gmailr.r-lib.org) (>= v1.0.0 *coming soon to CRAN*)
  * [googleAuthR](https://code.markedmondson.me/googleAuthR/) (*dev version*)
  * [googlesheets4](https://googlesheets4.tidyverse.org) *GitHub only*
  * [gcalendr](https://andrie.github.io/gcalendr/) *GitHub only*

gargle's functionality falls into two domains, which a client package can adopt (or not) separately:

  * Auth: help users authenticate themselves with their Google identity and
    obtain a token that the wrapper package can use to make authorized requests.
  * Request preparation and response handling: check requests against the
    machine-readable [Discovery Documents](https://developers.google.com/discovery/v1/reference/apis)
    that describe Google APIs and process API responses, especially errors.

### Auth via gargle

Under the hood, gargle's main auth function is [`token_fetch()`](https://gargle.r-lib.org/articles/how-gargle-gets-tokens.html), which tries a series of different methods for obtaining a token. The intent is to make auth "just work" in a wide variety of contexts. This makes some flows newly available in the client packages, such as [Application Default Credentials](https://www.jhanley.com/google-cloud-application-default-credentials/).

The main change that users will notice is that gargle implements its own way of storing user OAuth tokens between sessions. The [httr package](https://httr.r-lib.org), which gargle depends on, has historically used a local `.httr-oauth` file for this. In contrast, gargle encourages tokens to be stored *outside* the project, in a hidden directory at the user level, in a key-value store that incorporates the Google user's email. This makes it less likely you'll push your tokens to the cloud, easier to use multiple identities in a project, and easier to share tokens across projects and packages. Users will notice they need to re-auth and may want to track down and delete vestigial `.httr-oauth` files.

### Articles

The release of gargle has provided an occasion to document several recurring workflows that can be tricky for useRs, which now work the same across multiple packages:

  * [Non-interactive auth](https://gargle.r-lib.org/articles/non-interactive-auth.html)
  * [Auth when using R in the browser](https://gargle.r-lib.org/articles/auth-from-web.html)
  * [Managing tokens securely](https://gargle.r-lib.org/articles/articles/managing-tokens-securely.html)
  * [How to get your own API credentials](https://gargle.r-lib.org/articles/get-api-credentials.html) 
  
Other articles are aimed at package maintainers interested in delegating auth or request & response handling to gargle:

  * [How to use gargle for auth in a client package](https://gargle.r-lib.org/articles/gargle-auth-in-client-package.html)
  * [Request helper functions](https://gargle.r-lib.org/articles/request-helper-functions.html)

### Some gargle history

I find gargle's origin story find very satisfying. I suspect that Hadley Wickham's bigrquery (first on CRAN January 2015) has shaped the basic design for how most R packages handle Google auth, directly or indirectly. I can certainly say that Joanna Zhao and I consulted it when developing googlesheets (first on CRAN July 2015). I know that Mark Edmondson was influenced, in turn, by googlesheets, when he developed googleAuthR (first on CRAN August 2015), used in his [suite of packages](https://code.markedmondson.me/r-packages/). By the time Lucy D'Agostino McGowan and I created googledrive (first on CRAN August 2017), I'd developed some strong opinions about how to modify httr's default behaviour for work with Google APIs. I was also working with Hadley Wickham at RStudio by that point and Lucy and I benefited from his design advice. In May-ish 2017, leading up to [rOpenSci's 2017 Unconf](https://unconf17.ropensci.org), Craig Citro [opened an issue](https://github.com/ropensci/unconf17/issues/85) to generate discussion about how to de-duplicate even more API pain, especially for Google APis. He has a wealth of experience from his role in shaping the [official Python client](https://developers.google.com/api-client-library/) and he made the initial commits that laid the foundation for `gargle::token_fetch()`.

Starting from a common origin (bigrquery), all these people and packages have explored different aspects of this problem space and have developed various solutions. gargle represents the distillation of a lot of hard-won experience and a promising space for future consolidation.

### gargle thanks

Thanks to all contributors for this release....

## googledrive

*to be written*

### googledrive thanks

Thanks to all contributors for this release....
  
